@using TMDTNiViCi.Common
@using TMDTNiViCi.Model.EF
@model TMDTNiViCi.Model.EF.Product

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

@section cssHeader {
    <link href="~/Assets/admin/css/Product/ListProducts.css" rel="stylesheet" />
}

@section breadcrumb {
    <nav class="menu-navigation">
        <ul class="breadcrumb">
            <li><a href="/Admin/Home">Trang chủ</a></li>
            <li>Quản lý sản phẩm</li>
            <li>Danh sách sản phẩm</li>
        </ul>
    </nav>
}

<div class="PC-ai__list-products">
    <div class="Pc-ai__product-filter">
        <div class="pf__filter-header-container">
            <h3 class="fhc__filter-title"> Bộ lọc </h3>
            <div class="btn-container__btn-submit">
                <button type="submit" class="filter-btn btn-primary disable-btn-default-bootstrap" form="PC-ai__product-filter-form"> Lọc </button>
            </div>
        </div>
        <div class="pf__area-contain-filter-input">
            <div class="acfi__form">
                @using (Ajax.BeginForm("Create", "Product", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessOkie", OnFailure = "OnFailure" }, new { @id = "PC-ai__product-filter-form", @class = "grid form__values-filter-ipSelectHtml" }))
                {
                    <div class="form-group">
                        <label class="control-label col-md-2"> Nhóm sản phẩm </label>
                        <div class="col-md-10">
                            @Html.DropDownListForWithTag("CategoryID", new List<AttributeProductTypeDDL> {
                                new AttributeProductTypeDDL("class", "selectpicker PC-actionCreate__DDL-html"),
                                new AttributeProductTypeDDL("id","PC-ac__product-type-ddl"),
                                new AttributeProductTypeDDL("data-size", "10"),
                                new AttributeProductTypeDDL("data-live-search", "true"),
                                new AttributeProductTypeDDL("data-width", "100%"),
                                new AttributeProductTypeDDL("title", "Chọn loại sản phẩm"),
                            }, (List<ProductCategory>)ViewBag.CategoryID, 0)
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2"> Nhà cung cấp </label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Supplier, null, new { @class = "selectpicker PC-actionCreate__DDL-html", @data_width = "100%", @title = "Chọn nhà cung cấp..." })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2"> Khoảng giá </label>
                        <div class="col-md-10">
                            <div class="acfi__filter-product-price grid">
                                <div class="fpp__lowest-price">
                                    @*<label class="pf__product-filter-title-price"></label>*@
                                    <input type="text" name="lowest_price" value="" placeholder="Giá thấp nhất" class="lp__input" />
                                </div>
                                <div class="fpp__separation-lowest-highest-price text-align-center">
                                    <div class="slhp__dash pdi-top-5"><i class="fas fa-minus"></i></div>
                                </div>
                                <div class="fpp__highest-price">
                                    <input type="text" name="highest-price" value="" placeholder="Giá cao nhất" class="hp__input" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2"> Trạng thái </label>
                        <div class="col-md-10">
                            <div class="filter-container-state">
                                <ul class="fct__list-states">
                                    <li class="ls__filter-display-status f__status-item">
                                        <input type="radio" id="si__radio-display" name="selector" value="1" checked="checked">
                                        <label for="si__radio-display" class="si__label"> Hiển thị </label>
                                        <div class="check"></div>
                                    </li>

                                    <li class="ls__filter-hidden-state f__status-item">
                                        <input type="radio" id="si__radio-hidden" name="selector" value="0">
                                        <label for="si__radio-hidden" class="si__label">Ẩn</label>
                                        <div class="check"><div class="inside"></div></div>
                                    </li>

                                    <li class="ls__filter-delition-status f__status-item">
                                        <input type="radio" id="si__radio-delete" name="selector" value="1">
                                        <label for="si__radio-delete" class="si__label">Xóa</label>
                                        <div class="check"><div class="inside"></div></div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="PC-ai__add-search-products">
        <div class="adp__header grid grid-grid250">
            <div class="header__title-add">
                <h3 class="td__title"> Thêm </h3>
            </div>
            <div class="header__title-search">
                <h3 class="ts__title"> Tìm kiếm </h3>
            </div>
        </div>
        <div class="grid asp__container-add-search">

            <div class="cas__add-product flex-aic">
                <div class="lsp__ad__btn">
                    <button class="lab__btn-add-products disable-btn-default-bootstrap btn-primary">
                        <i class="fas fa-plus"></i>
                        <span class="bap__text"> Thêm </span>
                    </button>
                </div>
                <div class="ad__product-numb">
                    <span class="lsp__pn__text">Sản phẩm hiện có là 255</span>
                </div>
            </div>

            <div class="cas__search-product">
                @using (Ajax.BeginForm("Create", "Product", new AjaxOptions { HttpMethod = "POST", OnSuccess = "", OnFailure = "" }, new { @id = "PC-ai__product-search-form", @class = "grid form__values-search-ipHtml" }))
                {
                    <label class="psf__label-search"> Tìm kiếm </label>
                    <div class="psf__container-input-btnSearch">
                        <div class="admin__psf__input">
                            <input type="text" name="productName" value="" placeholder="Tên sản phẩm..." />
                        </div>
                        <div class="admin__psf__btn-submit">
                            <button class="disable-btn-default-bootstrap admin__bs__search-btn btn-primary">
                                <i class="fas fa-search"></i>
                                <span class="sb__text"> Tìm kiếm </span>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="PC-ai__display-product-list">
        <div class="dpl__all-availabel-products">
            <div id="aap__wrap-prod-list" class="">
                @*@Html.Partial("PartialViewUserList", ViewData["UserList"])*@
                <table class="adm__wpl__table-contain-products">
                    <thead>
                        <tr>
                            <th class="tcp__thead__order"> STT </th>
                            <th class="tcp__thead__prod-image"> Hình </th>
                            <th class="tcp__thead__prod-name" style="width: 22%;"> Tên </th>
                            <th class="tcp__thead__original-price"> Giá nhập </th>
                            <th class="tcp__thead__price"> Giá bán </th>
                            <th class="tcp__thead__promotional-price"> Giá khuyến mãi</th>
                            <th class="tcp__thead__date-created"> Ngày tạo </th>
                            <th class="tcp__thead__update-day"> Ngày cập nhật </th>
                            <th class="tcp__thead__status"> Trạng thái </th>
                            <th class="tcp__thead__tasks"> Tác vụ </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td> <span class="adm__tcp__prod-order"> 1 </span> </td>
                            <td>
                                <div class="adm__tcp__image-container">
                                    <img src="https://zicxaphotos.com/wp-content/uploads/2019/07/Girl-xinh-cute.jpg" class="adm__ic__main-image" />
                                </div>
                            </td>
                            <td width="250px">
                                <span class="adm__tcp__product-name"> Laptop Apple MacBook Air 13" 2019 MVFL2SA/A (Core i5/8GB/256GB SSD/UHD 617/macOS/1.3 kg) </span>
                            </td>
                            <td>
                                <span class="adm__tcp__original-price"> 15000000đ </span>
                            </td>
                            <td>
                                <span class="adm__tcp__price"> 17500000đ </span>
                            </td>
                            <td>
                                <span class="adm__tcp__promotional-price"> 17000000đ </span>
                            </td>
                            <td>
                                <span class="adm__tcp__date-created"> 2020-08-19 08:57:52 </span>
                            </td>
                            <td>
                                <span class="adm__tcp__update-day"> 2020-08-19 08:57:52 </span>
                            </td>
                            <td>
                                <div class="adm__tcp__prod-status">
                                    <button type="button" class="ps__btn-status btn-primary disable-btn-default-bootstrap"> Hiển thị </button>
                                </div>
                            </td>
                            <td>
                                <div class="adm__tcp__action">
                                    <div class="adm__activity-view">
                                        <button type="button" class="aav__btn-view disable-btn-default-bootstrap" data-toggle="tooltip" data-placement="bottom" title="Xem">
                                            <span class="aav__btn-icon"> <i class="far fa-eye"></i> </span>
                                        </button>
                                    </div>
                                    <div class="adm__repair-operations">
                                        <button type="button" class="aav__btn-edit disable-btn-default-bootstrap" data-toggle="tooltip" data-placement="bottom" title="Sửa">
                                            <span class="aav__btn__icon"> <i class="far fa-edit"></i> </span>
                                        </button>
                                    </div>
                                    <div class="adm__delete-operation">
                                        <button type="button" class="aav__btn-delete disable-btn-default-bootstrap" data-toggle="tooltip" data-placement="bottom" title="Xóa">
                                            <span class="aav__btn__icon"> <i class="far fa-trash-alt"></i> </span>
                                        </button>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="dpl__prod-numb-displayed">
                    <span>Hiển thị</span>
                    <input type="text" name="prod_numb" value="8" oldValue="8" class="pnd__ip-prod-numb ip-contain-only-numb" data-invalid="0" style="width: 50px;" />
                    <span>sản phẩm</span>
                </div>
            </div>
            <div class="paging-area">
                <ul class="pa__list-page-numbers">
                    <li class="left-arow">
                        <button class="disable-btn-default-bootstrap lf__prev-page" data-page="0">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                    </li>

                    <li class="right-arow">
                        <button class="disable-btn-default-bootstrap rr__next-page" data-page="2">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section jsFooter {
    <script>
        $('[data-toggle="tooltip"]').tooltip();
        // Lấy html của các phần tử html mà hiển thị nút thêm sản phẩm rồi thêm đến vị trí tg ứng trong responsive
        let classNameContainBtnAddProd = ".cas__add-product";
        let btnAddProductHTML = document.querySelector(".cas__add-product").outerHTML;
        function rpsAddRemoveElemFromDom(wd) {
            if (wd.matches) {
                if ($(".asp__container-add-search").children(classNameContainBtnAddProd).html() == null) {
                    document.querySelector(".PC-ai__list-products").removeChild(document.querySelector(classNameContainBtnAddProd));
                    $(btnAddProductHTML).insertBefore(".asp__container-add-search>.cas__search-product");
                }
            } else {
                if ($(".PC-ai__list-products").children(classNameContainBtnAddProd).html() == null) {
                    document.querySelector(".asp__container-add-search").removeChild(document.querySelector(classNameContainBtnAddProd));
                    $(btnAddProductHTML).insertBefore(".PC-ai__list-products>.Pc-ai__product-filter");
                }
            }
        }
        let browserWindow = window.matchMedia("(min-width: 450px)");
        rpsAddRemoveElemFromDom(browserWindow);
        browserWindow.addListener(rpsAddRemoveElemFromDom);
        //Xử lý phân trang
        let totalPages = 18, numbPages = 9;
        let attrUsedCal = "data-page";
        showFullPaging();
        function showFullPaging() {
            let strPagingBtnHTML = "";
            let txtPagingBtn = 0;
            for (let i = 1; i <= numbPages; i++) {
                txtPagingBtn = (i == numbPages) ? totalPages : ((i == numbPages - 1) ? "..." : i);
                strPagingBtnHTML += `<li><button class="disable-btn-default-bootstrap lpn__pagin-btn ${i == 1 ? "active" : ""}" data-page="${isNaN(txtPagingBtn) ? 0 : txtPagingBtn}"> ${txtPagingBtn}</button></li>`
            }
            $(strPagingBtnHTML).insertAfter('.pa__list-page-numbers .left-arow');
        }
        // Thêm sự kiện click cho các nút phân trang
        document.querySelectorAll(".pa__list-page-numbers button").forEach((elem) => {
            elem.addEventListener("click", (e) => {
                let valTargetBtn = Number(elem.getAttribute(attrUsedCal));
                let prevPage = Number(document.querySelector("button.active").getAttribute(attrUsedCal));
                if (valTargetBtn == 0 || valTargetBtn > totalPages || valTargetBtn < 1 || prevPage == valTargetBtn) { return; }
                document.querySelector("button.active").classList.remove("active");
                handlePagin(valTargetBtn);
            }, false);
        });
        function handlePagin(page) {
            let txtPagingBtn = 0, count = 0;
            let pagingBtns = document.querySelectorAll(".lpn__pagin-btn");
            if (page == 1 || (page - 1) <= 3) {
                pagingBtns.forEach((elem) => {
                    txtPagingBtn = (++count == numbPages - 1) ? "..." : ((count == numbPages) ? totalPages : count);
                    updatePagingBtn(elem, page, txtPagingBtn);
                });
            } else if (page == totalPages || (totalPages - page) <= 3) {
                let lastPages = totalPages + 3 - numbPages;
                pagingBtns.forEach((elem) => {
                    txtPagingBtn = (++count == 2) ? "..." : ((count == 1) ? 1 : lastPages++);
                    updatePagingBtn(elem, page, txtPagingBtn);
                });
            } else {
                pagingBtns.forEach((elem) => {
                    txtPagingBtn = (++count == 1 || count == numbPages) ? ((count == 1) ? 1 : totalPages) : ((Math.abs(Math.ceil(numbPages / 2) - count) > 2) ? "..." : page - (Math.ceil(numbPages / 2) - count));
                    updatePagingBtn(elem, page, txtPagingBtn);
                });
            }
            document.querySelector(".lf__prev-page").setAttribute(attrUsedCal, page - 1);
            document.querySelector(".rr__next-page").setAttribute(attrUsedCal, page + 1);
        }
        function updatePagingBtn(elemBtn, page, txtPagingBtn) {
            elemBtn.innerHTML = txtPagingBtn;
            elemBtn.setAttribute(attrUsedCal, isNaN(txtPagingBtn) ? 0 : txtPagingBtn);
            if (page == txtPagingBtn) {
                elemBtn.classList.add("active");
            }
        }
    </script>
    <script src="~/Scripts/Common/common.js"></script>
    <script src="~/Assets/admin/js/Product/ListProducts.js"></script>
}