@using TMDTNiViCi.Common
@using TMDTNiViCi.Model.EF
@model TMDTNiViCi.Model.EF.Product

@{
    var txtBtnSubmit = "Thêm sản phẩm";
    ViewBag.Title = "Create";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

@section cssHeader{
    <link href="~/Assets/admin/css/Product/AddProduct.css" rel="stylesheet" />
}
@section jsHeader {
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        // Thay đổi màu nền của select chứa các loại thông số kĩ thuật trên mỗi loại thông số khác nhau
        function changeBackgroundSpeType(elem) {
            let backgrColor = "#ea9a3b";
            let speType = Number(elem.value);
            backgrColor = (speType == 0) ? "#2a8397" : (speType == 1 ? "#46bc44" : (speType == 3 ? "#ea4949" : backgrColor));
            $(elem).next().css("background", backgrColor);
        }
    </script>
}

@section breadcrumb {
    <nav class="menu-navigation">
        <ul class="breadcrumb">
            <li><a href="/Admin/Home">Trang chủ</a></li>
            <li>Quản lý sản phẩm</li>
            <li>Thêm sản phẩm</li>
        </ul>
    </nav>
}

<h2 class="PC-ac__title-add-product">Thêm sản phẩm </h2>

@using (Ajax.BeginForm("Create", "Product", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessWAddProdKeyInfo", OnFailure = "onFailureWAddProdKeyInfo" }, new { @id = "PC-actionCreate__form-add-products" }))
{
    @Html.AntiForgeryToken()
    <div class="NiViCi-container-tabs">
        <button class="tablinks tabcontent-focusIn"> Thông tin cần thiết </button>
        <button class="tablinks"> Thông tin khác</button>
    </div>
    <div class="PC-ac__title-enter-parameters">
        <h4 class="tep__title">Nhập các thông số</h4>
    </div>
    <div class="form-horizontal PC-ac__form-horizontal">
        <div class="NiViCi-container-tabcontents">
            <div id="tab-1" class="NiViCi-tabs__tab-content tabcontent-focusIn ">
                <div class="tc__detail-info-product">
                    <div class="PC-ac__grid-container">
                        <div class="form-group d-none">
                            @Html.TextBoxFor(model => model.ID, new { @class = "form-control d-none" })
                        </div>
                        <div class="form-group">
                            @Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.Name, "Tên sản phẩm <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control PC-actionCreate__html-input-ele form-elem-tested", placeholder = "Laptop" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.Quantity, "Số lượng <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control PC-actionCreate__html-input-ele ip-contain-only-numb form-elem-tested", placeholder = "50" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.OriginalPrice, "Giá nhập <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.OriginalPrice, new { @class = "form-control PC-actionCreate__html-input-ele ip-contain-only-numb form-elem-tested", placeholder = "15.000.000đ" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.Price, "Giá bán <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Price, new { @class = "form-control PC-actionCreate__html-input-ele ip-contain-only-numb form-elem-tested", placeholder = "18.000.000đ" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PromotionPrice, "Giá khuyến mại", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.PromotionPrice, new { @class = "form-control PC-actionCreate__html-input-ele ip-contain-only-numb", @placeholder = "17.990.000đ" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PromotionPackageID, "Gói khuyến mại", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 container-preloader-bselect">
                                @Html.Partial("PVPreloaderFirst")
                                @Html.DropDownListFor(model => model.PromotionPackageID, null, new { @class = "selectpicker selectpicker-constant PC-actionCreate__DDL-html cpBs__BSelect", @data_width = "100%", @title = "Chọn gói..." })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplierID, "Nhà cung cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 container-preloader-bselect">
                                @Html.Partial("PVPreloaderFirst")
                                @Html.DropDownListFor(model => model.SupplierID, null, new { @class = "selectpicker selectpicker-constant PC-actionCreate__DDL-html cpBs__BSelect", @data_width = "100%", @title = "Thêm nhà cung cấp..." })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, "Loại sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 container-preloader-bselect">
                                @Html.Partial("PVPreloaderFirst")
                                @Html.DropDownListForWithTag("CategoryID", new List<AttributeProductTypeDDL> {
                                    new AttributeProductTypeDDL("class", "selectpicker selectpicker-constant PC-actionCreate__DDL-html cpBs__BSelect"),
                                    new AttributeProductTypeDDL("id","PC-ac__product-type-ddl"),
                                    new AttributeProductTypeDDL("data-size", "10"),
                                    new AttributeProductTypeDDL("data-live-search", "true"),
                                    new AttributeProductTypeDDL("data-width", "100%"),
                                    new AttributeProductTypeDDL("title", "Chọn loại sản phẩm...")
                                }, (List<ProductCategory>)ViewBag.CategoryID, (int)ViewBag.SelectedC)
                            </div>
                        </div>

                        @if (Model != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.UpdatedBy, "Người cập nhật", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 container-preloader-bselect">
                                    @Html.Partial("PVPreloaderFirst")
                                    @Html.DropDownListFor(model => model.UpdatedBy, null, new { @class = "selectpicker selectpicker-constant PC-actionCreate__DDL-html cpBs__BSelect", @data_width = "100%" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.CreatedBy, "Người tạo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 container-preloader-bselect">
                                    @Html.Partial("PVPreloaderFirst")
                                    @Html.DropDownListFor(model => model.CreatedBy, null, new { @class = "selectpicker selectpicker-constant PC-actionCreate__DDL-html cpBs__BSelect", @data_width = "100%" })
                                </div>
                            </div>
                        }

                        <div class="form-group flex-afe">
                            <div class="col-md-10 dip__product-status">
                                <h5 class="title-radio-toggle-display-state"> Trạng thái: </h5>
                                <div class="NiViCi__contains-input-radio">

                                    <div class="contains-input-radio__left-col">
                                        @Html.RadioButtonFor(model => model.Status, 1, new { @id = "NiViCi__radio-display-status", @checked = "checked" })
                                        <label for="NiViCi__radio-display-status">Hiển thị</label>
                                    </div>
                                    <div class="contains-input-radio__right-col">
                                        @Html.RadioButtonFor(model => model.Status, 2, new { @id = "NiViCi__radio-hidden-status" })
                                        <label for="NiViCi__radio-hidden-status">Ẩn</label>
                                    </div>
                                    <div class="contains-input-radio__right-col">
                                        @Html.RadioButtonFor(model => model.Status, 3, new { @id = "NiViCi__radio-delete-status" })
                                        <label for="NiViCi__radio-delete-status">Xóa</label>
                                    </div>
                                    <div class="contains-input-radio__right-col">
                                        @Html.RadioButtonFor(model => model.Status, 4, new { @id = "NiViCi__radio-contact-status" })
                                        <label for="NiViCi__radio-contact-status">Liên hệ</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group d-none" style="margin-bottom: 0;">
                            @*@Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.Category, "Danh Mục <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))*@
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Category, null, new { @class = "form-control PC-actionCreate__html-input-ele d-none form-elem-tested" })
                            </div>
                        </div>
                    </div>

                    @*Phần thông số kỹ thuật*@
                    <div class="PC-ac__container-specification-category">
                        @Html.Partial("PVSpecification", ViewData["VDCS"])
                    </div>
                    @*Kết thúc phần thông số kỹ thuật*@

                    <div class="form-group">
                        <div class="card" style="border: 1px solid #c17d7d; min-height:630px; transition: 1s;">
                            <div class="card-header PC-ac__card-header">
                                @Html.LabelFor(model => model.Description, "Miêu tả", htmlAttributes: new { @class = "control-label PC-ac__ch-label" })
                            </div>
                            <div class="card-body">
                                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @class = "PC-actionCreate__html-textarea-ele" })
                                <span class="error_mess" id="PC-ac__em-description"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="card" style=" border: 1px solid #8dab8d; min-height: 630px; transition: 1s;">
                            <div class="card-header PC-ac__card-header">
                                @Html.LabelFor(model => model.Content, "Nội dung chi tiết", htmlAttributes: new { @class = "control-label PC-ac__ch-label" })
                            </div>
                            <div class="card-body">
                                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" }, @class = "PC-actionCreate__html-textarea-ele" })
                                <span class="error_mess" id="PC-ac__em-content"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="tab-2" class="NiViCi-tabs__tab-content">
                <div class="tc__orther-product-info">
                    <div class="card opi__card-contain-seo-info" style=" border: 1px solid #8dab8d;">
                        <div class="card-header PC-ac__card-header">
                            <h3 class="PC-ac__ch-title ch__title-seo">
                                Thông tin về SEO
                            </h3>
                        </div>
                        <div class="card-body">
                            <div class="PC-ac__grid-container">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Alias, "Alias", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MetaKeyword, "Meta key", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MetaDescription, "Meta des", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card opi__card-container-pro-img" style=" border: 1px solid #8dab8d;">
                        <div class="card-header PC-ac__card-header">
                            <h3 class="PC-ac__ch-title ch__seo-image-title">
                                Hình ảnh sản phẩm
                            </h3>
                        </div>
                        <div class="card-body">
                            <div class="PC-ac__grid-container">
                                <div class="form-group rps__product-image">
                                    <div class="opi__main-image-section">
                                        @Html.Raw(HttpUtility.HtmlDecode(Html.LabelFor(model => model.Image, "Hình ảnh chính: <span class='requied-fields'></span>", htmlAttributes: new { @class = "control-label col-md-2" }).ToString()))
                                        <div class="col-md-10" style="margin-bottom: 20px;">
                                            @Html.TextBoxFor(model => model.Image, new { @class = "form-control d-none form-elem-tested", @id = "PC-ac__product-image" })
                                            <div class="box__upload-image">
                                                <div class="up__btn">
                                                    <button class="btn-primary PC-ac__btn-select-image"> Tải ảnh </button>
                                                </div>
                                                <div class="ui__display-image"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group rps__product-image">
                                    <div class="opi__related-images">
                                        @Html.LabelFor(model => model.MoreImages, "Hình ảnh liên quan (Xóa: Click vào ảnh)", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10" style="display: flex;">
                                            <div class="box__select-many-images">
                                                @*@Html.TextBoxFor(model => model.MoreImages, new { @type = "file", @multiple = "multiple", @class = "form-control inputfile", @id = "PC-ac__ip-many-product-images", @onChange = "handleImageChanges()" })*@
                                                @Html.TextBoxFor(model => model.MoreImages, new { @class = "d-none" })
                                                <input type="file" name="moreImageSample" value="" multiple class="form-control inputfile" id="PC-ac__ip-many-product-images" />
                                                <label for="PC-ac__ip-many-product-images">
                                                    <figure><svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17"><path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z" /></svg></figure>
                                                    <span class="impi__display-numb-image" data-numb-image="0" data-toggle="tooltip" data-placement="bottom" title="0 ảnh được chọn!">0 ảnh được chọn&hellip;</span>
                                                    <script>$('[data-toggle="tooltip"]').tooltip();</script>
                                                </label>
                                            </div>
                                            <div class="box__display-image-list"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group rps__product-image">
                                    <div class="opi__seo-image-section">
                                        @Html.LabelFor(model => model.SeoImage, "Hình ảnh seo:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.SeoImage, new { @class = "form-control d-none dbrr", @id = "PC-ac__seo-image" })
                                            <div class="box__upload-image">
                                                <div class="up__btn">
                                                    <button class="btn-primary PC-ac__btn-select-image"> Tải ảnh </button>
                                                </div>
                                                <div class="ui__display-image"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin: auto;">
                <div class="btn-container__btn-reset-submit-back grid-gtc1auto-jc">

                    @if (Model != null)
                    {
                        txtBtnSubmit = "Cập nhật";
                    }
                    else
                    {
                        <button type="reset" class="disable-btn-default-bootstrap bsr__btn-reset btn-success padding-tb-lf-5-20"> Làm mới </button>
                    }
                    <button type="submit" class="btn-primary disable-btn-default-bootstrap bsr__btn-submit btn-submit padding-tb-lf-5-20"> @txtBtnSubmit </button>
                    <button type="button" class="btn-secondary disable-btn-default-bootstrap btn-back">
                        <a href="/Admin/Product/Index" class="padding-tb-lf-5-20"> Trở về </a>
                    </button>
                </div>

            </div>
        </div>
    </div>
}

@section jsFooter {
    <script src="~/Scripts/Common/common.js"></script>
    <script type="module" src="~/Assets/admin/js/Product/Create/Index.js"></script>
    <script src="~/Scripts/ckfinder/ckfinder.js"></script>
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        //Hiển thị các textarea thông qua CKEditor
        CKEDITOR.replace("Description");
        CKEDITOR.replace("Content");
    </script>
    <script src="~/Scripts/alertify.min.js"></script>
}
